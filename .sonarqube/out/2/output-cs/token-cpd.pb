Ï'
zC:\Users\rafap\source\repos\ClasesDavid\ActividadFinal\Peliculas.API\Peliculas.Infraestructure\AlmacenadorArchivosLocal.cs
	namespace		 	
	Peliculas		
 
.		 
Infraestructure		 #
{

 
public 

class $
AlmacenadorArchivosLocal )
:* +
IAlmacenarArchivos, >
{ 
private 
readonly 
string 
path  $
;$ %
private 
readonly 
string 
host  $
;$ %
public $
AlmacenadorArchivosLocal '
(' (
)( )
{ 	
host 
= 
AppVariables 
.  
RootPath  (
;( )
path 
= 
AppVariables 
.  
WebRootPath  +
;+ ,
} 	
public 
async 
Task 
< 
string  
>  !
EditarArchivo" /
(/ 0
byte0 4
[4 5
]5 6
	contenido7 @
,@ A
stringB H
	extensionI R
,R S
stringT Z
nombreContenedor[ k
,k l
stringl r
rutaArchivos ~
)~ 
{ 	
if 
( 
! 
string 
. 
IsNullOrEmpty %
(% &
rutaArchivo& 1
)1 2
)2 3
{ 
await 
EliminarArchivo %
(% &
rutaArchivo& 1
,1 2
nombreContenedor3 C
)C D
;D E
} 
return 
await 
GuardarArchivo '
(' (
	contenido( 1
,1 2
	extension3 <
,< =
nombreContenedor> N
)N O
;O P
} 	
public 
Task 
EliminarArchivo #
(# $
string$ *
ruta+ /
,/ 0
string1 7
nombreContenedor8 H
)H I
{ 	
var 
fileName 
= 
Path 
.  
GetFileName  +
(+ ,
ruta, 0
)0 1
;1 2
string   
directorioArchivo   $
=  % &
Path  ' +
.  + ,
Combine  , 3
(  3 4
path  4 8
,  8 9
nombreContenedor  : J
,  J K
fileName  L T
)  T U
;  U V
if!! 
(!! 
File!! 
.!! 
Exists!! 
(!! 
directorioArchivo!! -
)!!- .
)!!. /
{"" 
File## 
.## 
Delete## 
(## 
directorioArchivo## -
)##- .
;##. /
}$$ 
return%% 
Task%% 
.%% 

FromResult%% "
(%%" #
$num%%# $
)%%$ %
;%%% &
}&& 	
public(( 
async(( 
Task(( 
<(( 
string((  
>((  !
GuardarArchivo((" 0
(((0 1
byte((1 5
[((5 6
]((6 7
	contenido((8 A
,((A B
string((C I
	extension((J S
,((S T
string((U [
nombreContenedor((\ l
)((l m
{)) 	
string** 
fileName** 
=** 
$"**  
{**  !
Guid**! %
.**% &
NewGuid**& -
(**- .
)**. /
}**/ 0
$str**0 1
{**1 2
	extension**2 ;
}**; <
"**< =
;**= >
string++ 
folder++ 
=++ 
Path++  
.++  !
Combine++! (
(++( )
path++) -
,++- .
nombreContenedor++/ ?
)++? @
;++@ A
if-- 
(-- 
!-- 
	Directory-- 
.-- 
Exists-- !
(--! "
folder--" (
)--( )
)--) *
{.. 
	Directory// 
.// 
CreateDirectory// )
(//) *
folder//* 0
)//0 1
;//1 2
}00 
string11 
rutaGuardado11 
=11  !
Path11" &
.11& '
Combine11' .
(11. /
folder11/ 5
,115 6
fileName117 ?
)11? @
;11@ A
await22 
File22 
.22 
WriteAllBytesAsync22 )
(22) *
rutaGuardado22* 6
,226 7
	contenido228 A
)22A B
;22B C
var33 
url33 
=33 
$"33 
{33 
host33 
}33 
$str33 
{33  
nombreContenedor33  0
}330 1
$str331 2
{332 3
fileName333 ;
}33; <
"33< =
;33= >
return44 
url44 
;44 
}55 	
}66 
}77 é

zC:\Users\rafap\source\repos\ClasesDavid\ActividadFinal\Peliculas.API\Peliculas.Infraestructure\Context\PeliculasContext.cs
	namespace

 	
	Peliculas


 
.

 
Infraestructure

 #
.

# $
Context

$ +
{ 
public 

class 
PeliculasContext !
:! "
	DbContext# ,
{ 
private 
static 
long 
InstanceCount )
;) *
public 
PeliculasContext 
(  
DbContextOptions  0
<0 1
PeliculasContext1 A
>A B
optionsC J
)J K
:L M
baseN R
(R S
optionsS Z
)Z [
=> 
Interlocked 
. 
	Increment $
($ %
ref% (
InstanceCount) 6
)6 7
;7 8
public 
DbSet 
< 
Pelicula 
> 
	Peliculas (
{) *
set+ .
;. /
get0 3
;3 4
}5 6
public 
DbSet 
< 
ImagenPelicula #
># $
ImagenesPeliculas% 6
{7 8
set9 <
;< =
get> A
;A B
}C D
} 
} ’%
rC:\Users\rafap\source\repos\ClasesDavid\ActividadFinal\Peliculas.API\Peliculas.Infraestructure\EFCoreRepository.cs
	namespace

 	
	Peliculas


 
.

 
Infraestructure

 #
{ 
public 

class 
EFCoreRepository !
<! "
TEntity" )
,) *
TId* -
>- .
:/ 0
IRepository1 <
<< =
TEntity= D
,D E
TIdE H
>H I
where 
TEntity 
: 
Entity 
< 
TId "
>" #
,# $
new% (
(( )
)) *
where 
TId 
: 
IComparable 
,  
IComparable! ,
<, -
TId- 0
>0 1
{ 
private 
readonly 
PeliculasContext )
_context* 2
;2 3
public 
EFCoreRepository 
(  
PeliculasContext  0
context1 8
)8 9
=>: <
_context= E
=F G
contextH O
;O P
public 
TEntity 
Add 
( 
TEntity "
entity# )
)) *
{ 	
_context 
. 
Set 
< 
TEntity  
>  !
(! "
)" #
.# $
Add$ '
(' (
entity( .
). /
;/ 0
Commit 
( 
) 
; 
return 
entity 
; 
} 	
public 
TEntity 
Delete 
( 
TId !
id" $
)$ %
{ 	
var 
entity 
= 
GetById  
(  !
id! #
)# $
;$ %
_context 
. 
Set 
< 
TEntity  
>  !
(! "
)" #
.# $
Remove$ *
(* +
entity+ 1
)1 2
;2 3
Commit 
( 
) 
; 
return 
entity 
; 
}   	
public"" 
List"" 
<"" 
TEntity"" 
>"" 
GetAll"" #
(""# $
)""$ %
{## 	
return$$ 
_context$$ 
.$$ 
Set$$ 
<$$  
TEntity$$  '
>$$' (
($$( )
)$$) *
.$$* +
ToList$$+ 1
($$1 2
)$$2 3
;$$3 4
}%% 	
public'' 
TEntity'' 
GetById'' 
('' 
TId'' "
id''# %
)''% &
{(( 	
return)) 
_context)) 
.)) 
Set)) 
<))  
TEntity))  '
>))' (
())( )
)))) *
.))* +
Where))+ 0
())0 1
x))1 2
=>))3 5
x))6 7
.))7 8
Id))8 :
.)): ;
Equals)); A
())A B
id))B D
)))D E
)))E F
.))F G
FirstOrDefault))G U
())U V
)))V W
;))W X
}** 	
public,, 
List,, 
<,, 
TEntity,, 
>,, 
GetByFilter,, (
(,,( )
Func,,) -
<,,- .
TEntity,,. 5
,,,5 6
bool,,7 ;
>,,; <
	predicate,,= F
),,F G
{-- 	
return.. 
_context.. 
... 
Set.. 
<..  
TEntity..  '
>..' (
(..( )
)..) *
...* +
Where..+ 0
(..0 1
	predicate..1 :
)..: ;
...; <
ToList..< B
(..B C
)..C D
;..D E
}// 	
public00 
TEntity00 
Update00 
(00 
TEntity00 %
entity00& ,
)00, -
{11 	
_context22 
.22 
Set22 
<22 
TEntity22  
>22  !
(22! "
)22" #
.22# $
Update22$ *
(22* +
entity22+ 1
)221 2
;222 3
Commit33 
(33 
)33 
;33 
return44 
entity44 
;44 
}55 	
private77 
void77 
Commit77 
(77 
)77 
{88 	
_context99 
.99 
SaveChanges99  
(99  !
)99! "
;99" #
}:: 	
};; 
}<< Ÿ
rC:\Users\rafap\source\repos\ClasesDavid\ActividadFinal\Peliculas.API\Peliculas.Infraestructure\MemoryRepository.cs
	namespace 	
	Peliculas
 
. 
Infraestructure #
{		 
public

 

class

 
MemoryRepository

 !
<

! "
TEntity

" )
,

) *
TId

+ .
>

. /
:

0 1
IRepository

2 =
<

= >
TEntity

> E
,

E F
TId

G J
>

J K
where 
TEntity 
: 
Entity 
< 
TId "
>" #
,# $
new% (
(( )
)) *
where 
TId 
: 
IComparable 
,  
IComparable! ,
<, -
TId- 0
>0 1
{ 
private 
static 
List 
< 
TEntity #
># $
_List% *
=+ ,
new- 0
List1 5
<5 6
TEntity6 =
>= >
(> ?
)? @
;@ A
public 
TEntity 
Add 
( 
TEntity "
entity# )
)) *
{ 	
_List 
. 
Add 
( 
entity 
) 
; 
return 
entity 
; 
} 	
public 
TEntity 
Delete 
( 
TId !
id" $
)$ %
{ 	
var 
entity 
= 
GetById  
(  !
id! #
)# $
;$ %
_List 
. 
Remove 
( 
entity 
)  
;  !
return 
entity 
; 
} 	
public 
List 
< 
TEntity 
> 
GetAll #
(# $
)$ %
{ 	
return 
_List 
; 
}   	
public"" 
TEntity"" 
GetById"" 
("" 
TId"" "
id""# %
)""% &
{## 	
return$$ 
_List$$ 
.$$ 
Find$$ 
($$ 
x$$ 
=>$$  "
x$$# $
.$$$ %
Id$$% '
.$$' (
Equals$$( .
($$. /
id$$/ 1
)$$1 2
)$$2 3
;$$3 4
}%% 	
public'' 
TEntity'' 
Update'' 
('' 
TEntity'' %
entity''& ,
)'', -
{(( 	
Delete)) 
()) 
entity)) 
.)) 
Id)) 
))) 
;)) 
return** 
Add** 
(** 
entity** 
)** 
;** 
}++ 	
public-- 
List-- 
<-- 
TEntity-- 
>-- 
GetByFilter-- (
(--( )
Func--) -
<--- .
TEntity--. 5
,--5 6
bool--7 ;
>--; <
	predicate--= F
)--F G
{.. 	
return// 
_List// 
.// 
Where// 
(// 
	predicate// (
)//( )
.//) *
ToList//* 0
(//0 1
)//1 2
;//2 3
}00 	
}11 
}22 